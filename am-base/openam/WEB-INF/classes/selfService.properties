#
# Copyright 2015-2019 ForgeRock AS. All Rights Reserved
#
# Use of this code requires a commercial software license with ForgeRock AS.
# or with one of its affiliates. All use shall be exclusively subject
# to such license between the licensee and ForgeRock AS.
#

self-service-description=User Self-Service

# general configuration
encryption.key.pair.alias=Encryption Key Pair Alias
encryption.key.pair.alias.help=An encryption key alias in the OpenAM server's JCEKS keystore. Used to encrypt the JWT \
  token that OpenAM uses to track end users during User Self-Service operations.

signing.secret.key.alias=Signing Secret Key Alias
signing.secret.key.alias.help=A signing secret key alias in the OpenAM server's JCEKS keystore. Used to sign the JWT \
  token that OpenAM uses to track end users during User Self-Service operations.
captcha.site.key=Google reCAPTCHA Site Key
captcha.site.key.help=Google reCAPTCHA plugin site key.
captcha.secret.key=Google reCAPTCHA Secret Key
captcha.secret.key.help=Google reCAPTCHA plugin secret key.
captcha.verification.url=Google Re-captcha Verification URL
captcha.verification.url.help=Google reCAPTCHA plugin verification URL.
kba.questions=Security Questions
kba.questions.help=Specifies the default set of knowledge-based authentication (KBA) security questions. The security \
  questions can be set for the User Self-Registration, forgotten password reset, and forgotten username services, \
  respectively.<p><p>Format is <code>unique key|locale|question</code>.
minimum.answers.to.define=Minimum Answers to Define
minimum.answers.to.define.help=Specifies the minimum number of KBA answers that users must define.
minimum.answers.to.verify=Minimum Answers to Verify
minimum.answers.to.verify.help=Specifies the minimum number of KBA questions that users need to answer to be granted \
  the privilege to carry out an action, such as registering for an account, resetting a password, or retrieving a \
  username. Specify a value from <code>0</code> to <code>50</code>.
valid.query.attributes=Valid Query Attributes
valid.query.attributes.help=Specifies the valid query attributes used to search for the user. This is a list of \
  attributes used to identify your account for forgotten password and forgotten username.

# user registration
user.registration.enabled=User Registration
user.registration.enabled.help=If enabled, new users can sign up for an account.
user.registration.captcha.enabled=Captcha
user.registration.captcha.enabled.help=If enabled, users must pass a Google reCAPTCHA challenge during user \
  self-registration to mitigate against software bots.
user.registration.email.verification.enabled=Email Verification
user.registration.email.verification.enabled.help=If enabled, users who self-register must perform email address verification.
user.registration.email.verification.first.enabled=Verify Email before User Detail
user.registration.email.verification.first.enabled.help=If enabled, email address verification will be performed first before user details screen is displayed. This will take effect only if Verify Email is enabled.
user.registration.kba.enabled=Security Questions
user.registration.kba.enabled.help=If enabled, users must set up their security questions during the self-registration process.
user.registration.token.ttl=Token Lifetime (seconds)
user.registration.token.ttl.help=Maximum lifetime of the token allowing User Self-Registration, in seconds.
user.registration.email.subject=Outgoing Email Subject
user.registration.email.subject.help=Customize the User Self-Registration verification email subject text. Format is <code>locale|subject text</code>.
user.registration.email.body=Outgoing Email Body
user.registration.email.body.help=Customize the User Self-Registration verification email body text. Format is: <code>locale|body text</code>.
user.registration.valid.user.attributes=Valid Creation Attributes
user.registration.valid.user.attributes.help=Specifies a whitelist of user attributes that can be set during user creation.
user.registration.destination=Destination After Successful Self-Registration
user.registration.destination.help=Specifies the action to be taken after a user successfully registers a new account. Choose from:<ul>\
    <li><code>default</code>. User is sent to a success page without being logged in.</li>\
    <li><code>login</code>. User is sent to the login page to authenticate.</li>\
    <li><code>autologin</code>. User is automatically logged in and sent to the appropriate page.</li></ul>
user.registration.destination.default=User sent to 'successful registration' page
user.registration.destination.login=User sent to login page
user.registration.destination.auto-login=User is automatically logged in

# forgotten password
forgotten.password.enabled=Forgotten Password
forgotten.password.enabled.help=If enabled, users can reset their forgotten password.
forgotten.password.captcha.enabled=Captcha
forgotten.password.captcha.enabled.help=If enabled, users must pass a Google reCAPTCHA challenge during password reset \
  to mitigate against software bots.
forgotten.password.email.verification.enabled=Email Verification
forgotten.password.email.verification.enabled.help=If enabled, users who reset passwords must perform email address verification.
forgotten.password.kba.enabled=Security Questions
forgotten.password.kba.enabled.help=If enabled, users must answer their security questions during the forgotten password process.
forgotten.password.kba.number.of.allowed.attempts.enforced=Enforce password reset lockout
forgotten.password.kba.number.of.allowed.attempts.enforced.help=If enabled, users will be prevented from resetting \
  their password after the configured number of failed attempts.
forgotten.password.kba.number.of.allowed.attempts=Lock Out After number of attempts
forgotten.password.kba.number.of.allowed.attempts.help=Can be set to 1 or more attempts for a user to correctly answer \
  all their security questions. After the number of configured attempts the user has not correctly answered them the \
  password reset feature will be disabled.
forgotten.password.token.ttl=Token Lifetime (seconds)
forgotten.password.token.ttl.help=Maximum lifetime for the token allowing forgotten password reset, in seconds.<p>\
  <p>Specify a value from <code>0</code> to <code>2147483647</code>.
forgotten.password.email.subject=Outgoing Email Subject
forgotten.password.email.subject.help=Customize the forgotten password email subject text. Format is <code>locale|subject text</code>.
forgotten.password.email.body=Outgoing Email Body
forgotten.password.email.body.help=Customize the forgotten password email body text. Format is <code>locale|body text</code>.

# forgotten username
forgotten.username.enabled=Forgotten Username
forgotten.username.enabled.help=If enabled, users can retrieve their forgotten username.
forgotten.username.captcha.enabled=Captcha
forgotten.username.captcha.enabled.help=If enabled, users must pass a Google reCAPTCHA challenge during the forgotten \
  username retrieval process to mitigate against software bots.
forgotten.username.kba.enabled=Security Questions
forgotten.username.kba.enabled.help=If enabled, users must answer their security questions during the forgotten username process.
forgotten.username.email.username.enabled=Email Username
forgotten.username.email.username.enabled.help=If enabled, users receive their forgotten username by email.
forgotten.username.show.username.enabled=Show Username
forgotten.username.show.username.enabled.help=If enabled, users see their forgotten username on the browser page.
forgotten.username.token.ttl=Token LifeTime (seconds)
forgotten.username.token.ttl.help=Maximum lifetime for the token allowing forgotten username, in seconds.
forgotten.username.email.subject=Outgoing Email Subject
forgotten.username.email.subject.help=Customizes the forgotten username email subject text. Format is <code>locale|subject text</code>.
forgotten.username.email.body=Outgoing Email Body
forgotten.username.email.body.help=Customizes the forgotten username email body text. Format is <code>locale|body text</code>.

# profile management
profile.protected.user.attributes=Protected Update Attributes
profile.protected.user.attributes.help=Specifies a profile's protected user attributes, which causes re-authentication \
  when the user attempts to modify these attributes.
profile.attribute.whitelist=Self readable attributes
profile.attribute.whitelist.help=Specifies the list of attributes that users can view when accessing their user profile.

# advanced configuration
user.registration.confirmation.url=User Registration Confirmation Email URL
user.registration.confirmation.url.help=Specifies the confirmation URL that the user receives during the \
  self-registration process. The <code>${realm}</code> string is replaced with the current realm.
forgotten.password.confirmation.url=Forgotten Password Confirmation Email URL
forgotten.password.confirmation.url.help=Specifies the confirmation URL that the user receives after confirming their \
  identity during the forgotten password process. The <code>${realm}</code> string is replaced with the current realm.
user.registration.service.config.class=User Registration Service Config Provider Class
user.registration.service.config.class.help=Specifies the provider class to configure any custom plugins.
forgotten.password.service.config.class=Forgotten Password Service Config Provider Class
forgotten.password.service.config.class.help=Specifies the provider class to configure any custom plugins.
forgotten.username.service.config.class=Forgotten Username Service Config Provider Class
forgotten.username.service.config.class.help=Specifies the provider class to configure any custom plugins.

# Resource strings
forgottenPasswordKbaLockedOut=Security answer verification attempts exceeded, please contact administrator
forgottenPasswordKbaIncorrect=Security question answers do not match