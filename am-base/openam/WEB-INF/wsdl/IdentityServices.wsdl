<?xml version="1.0" encoding="UTF-8"?>
<!--
   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

   Copyright (c) 2002-2010 Sun Microsystems Inc. All Rights Reserved

   The contents of this file are subject to the terms
   of the Common Development and Distribution License
   (the License). You may not use this file except in
   compliance with the License.

   You can obtain a copy of the License at
   https://opensso.dev.java.net/public/CDDLv1.0.html or
   opensso/legal/CDDLv1.0.txt
   See the License for the specific language governing
   permission and limitations under the License.

   When distributing Covered Code, include this CDDL
   Header Notice in each file and include the License file
   at opensso/legal/CDDLv1.0.txt.
   If applicable, add the following below the CDDL Header,
   with the fields enclosed by brackets [] replaced by
   your own identifying information:
   "Portions Copyrighted [year] [name of copyright owner]"

   Portions Copyrighted 2010-2017 ForgeRock AS.
-->
<definitions
        xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
        xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
        xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
        xmlns:tns="http://opensso.idsvcs.identity.sun.com/"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns="http://schemas.xmlsoap.org/wsdl/"
        targetNamespace="http://opensso.idsvcs.identity.sun.com/" name="IdentityServices">
    <types>
        <xsd:schema xmlns:tns="http://opensso.idsvcs.identity.sun.com/"
                    xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0"
                    targetNamespace="http://opensso.idsvcs.identity.sun.com/">

            <xsd:element name="IdServicesException" type="tns:IdServicesException"></xsd:element>

            <xsd:element name="AccessDenied" type="tns:AccessDenied"></xsd:element>

            <xsd:element name="GeneralFailure" type="tns:GeneralFailure"></xsd:element>

            <xsd:element name="NeedMoreCredentials" type="tns:NeedMoreCredentials"></xsd:element>

            <xsd:element name="TokenExpired" type="tns:TokenExpired"></xsd:element>

            <xsd:element name="ObjectNotFound" type="tns:ObjectNotFound"></xsd:element>

            <xsd:element name="attributes" type="tns:attributes"></xsd:element>

            <xsd:element name="attributesRequest" type="tns:attributesRequest"></xsd:element>

            <xsd:element name="attributesResponse" type="tns:attributesResponse"></xsd:element>

            <xsd:element name="getCookieNameForToken" type="tns:getCookieNameForToken"></xsd:element>

            <xsd:element name="getCookieNameForTokenResponse" type="tns:getCookieNameForTokenResponse"></xsd:element>

            <xsd:element name="getCookieNamesToForward" type="tns:getCookieNamesToForward"></xsd:element>

            <xsd:element name="getCookieNamesToForwardResponse" type="tns:getCookieNamesToForwardResponse"></xsd:element>

            <xsd:element name="log" type="tns:log"></xsd:element>

            <xsd:element name="logResponse" type="tns:logResponse"></xsd:element>

            <xsd:element name="read" type="tns:read"></xsd:element>

            <xsd:element name="readResponse" type="tns:readResponse"></xsd:element>

            <xsd:complexType name="log">
                <xsd:sequence>
                    <xsd:element name="app" type="tns:token" minOccurs="0"></xsd:element>
                    <xsd:element name="subject" type="tns:token" minOccurs="0"></xsd:element>
                    <xsd:element name="logName" type="xsd:string" minOccurs="0"></xsd:element>
                    <xsd:element name="message" type="xsd:string" minOccurs="0"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="token">
                <xsd:sequence>
                    <xsd:element name="id" type="xsd:string" minOccurs="0"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="logResponse">
                <xsd:sequence></xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="IdServicesException" abstract="true"/>

            <xsd:complexType name="AccessDenied">
                <xsd:complexContent>
                    <xsd:extension base="tns:IdServicesException">
                        <xsd:sequence>
                            <xsd:element name="message" type="xsd:string" minOccurs="0"></xsd:element>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>

            <xsd:complexType name="TokenExpired">
                <xsd:complexContent>
                    <xsd:extension base="tns:IdServicesException">
                        <xsd:sequence>
                            <xsd:element name="message" type="xsd:string" minOccurs="0"></xsd:element>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>

            <xsd:complexType name="GeneralFailure">
                <xsd:complexContent>
                    <xsd:extension base="tns:IdServicesException">
                        <xsd:sequence>
                            <xsd:element name="message" type="xsd:string" minOccurs="0"></xsd:element>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>

            <xsd:complexType name="attributes">
                <xsd:sequence>
                    <xsd:element name="attributeNames" type="xsd:string" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                    <xsd:element name="subject" type="tns:token" minOccurs="0"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="attributesRequest">
                <xsd:sequence>
                    <xsd:element name="attributes" type="xsd:string" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                    <xsd:element name="subject" type="tns:token" minOccurs="0"></xsd:element>
                    <xsd:element name="refresh" type="xsd:boolean" minOccurs="0" maxOccurs="1"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="attributesResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="tns:userDetails" minOccurs="0"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="userDetails">
                <xsd:sequence>
                    <xsd:element name="attributes" type="tns:attribute" nillable="true" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                    <xsd:element name="roles" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                    <xsd:element name="token" type="tns:token" minOccurs="0"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="attribute">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string" minOccurs="0"></xsd:element>
                    <xsd:element name="values" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="getCookieNameForToken">
            </xsd:complexType>

            <xsd:complexType name="getCookieNameForTokenResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:string"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="getCookieNamesToForward">
            </xsd:complexType>

            <xsd:complexType name="getCookieNamesToForwardResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="listWrapper">
                <xsd:sequence>
                    <xsd:element name="elements" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="identityDetails">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string" minOccurs="0"></xsd:element>
                    <xsd:element name="type" type="xsd:string" minOccurs="0"></xsd:element>
                    <xsd:element name="realm" type="xsd:string" minOccurs="0"></xsd:element>
                    <xsd:element name="roleList" type="tns:listWrapper" nillable="true" minOccurs="0"></xsd:element>
                    <xsd:element name="groupList" type="tns:listWrapper" nillable="true" minOccurs="0"></xsd:element>
                    <xsd:element name="memberList" type="tns:listWrapper" nillable="true" minOccurs="0"></xsd:element>
                    <xsd:element name="attributes" type="tns:attribute" nillable="true" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="read">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string" minOccurs="0"></xsd:element>
                    <xsd:element name="attributes" type="tns:attribute" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                    <xsd:element name="admin" type="tns:token" minOccurs="0"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="readResponse">
                <xsd:sequence>
                    <xsd:element name="return" type="tns:identityDetails" minOccurs="0"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="NeedMoreCredentials">
                <xsd:complexContent>
                    <xsd:extension base="tns:IdServicesException">
                        <xsd:sequence>
                            <xsd:element name="message" type="xsd:string" minOccurs="0"></xsd:element>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>

            <xsd:complexType name="ObjectNotFound">
                <xsd:complexContent>
                    <xsd:extension base="tns:IdServicesException">
                        <xsd:sequence>
                            <xsd:element name="message" type="xsd:string" minOccurs="0"></xsd:element>
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
        </xsd:schema>
    </types>
    <message name="IdServicesException">
        <part name="fault" element="tns:IdServicesException"></part>
    </message>
    <message name="log">
        <part name="parameters" element="tns:log"></part>
    </message>
    <message name="logResponse">
        <part name="parameters" element="tns:logResponse"></part>
    </message>
    <message name="AccessDenied">
        <part name="fault" element="tns:AccessDenied"></part>
    </message>
    <message name="TokenExpired">
        <part name="fault" element="tns:TokenExpired"></part>
    </message>
    <message name="GeneralFailure">
        <part name="fault" element="tns:GeneralFailure"></part>
    </message>
    <message name="attributesRequest">
        <part name="parameters" element="tns:attributesRequest"></part>
    </message>
    <message name="attributesResponse">
        <part name="parameters" element="tns:attributesResponse"></part>
    </message>
    <message name="ObjectNotFound">
        <part name="fault" element="tns:ObjectNotFound"></part>
    </message>
    <message name="NeedMoreCredentials">
        <part name="fault" element="tns:NeedMoreCredentials"></part>
    </message>
    <message name="getCookieNameForToken">
        <part name="parameters" element="tns:getCookieNameForToken"></part>
    </message>
    <message name="getCookieNameForTokenResponse">
        <part name="parameters" element="tns:getCookieNameForTokenResponse"></part>
    </message>
    <message name="getCookieNamesToForward">
        <part name="parameters" element="tns:getCookieNamesToForward"></part>
    </message>
    <message name="getCookieNamesToForwardResponse">
        <part name="parameters" element="tns:getCookieNamesToForwardResponse"></part>
    </message>
    <message name="read">
        <part name="parameters" element="tns:read"></part>
    </message>
    <message name="readResponse">
        <part name="parameters" element="tns:readResponse"></part>
    </message>
    <portType name="IdentityServicesImpl">
        <operation name="log">
            <input message="tns:log"></input>
            <output message="tns:logResponse"></output>
            <fault message="tns:AccessDenied" name="AccessDenied"></fault>
            <fault message="tns:TokenExpired" name="TokenExpired"></fault>
            <fault message="tns:GeneralFailure" name="GeneralFailure"></fault>
        </operation>
        <operation name="attributes">
            <input message="tns:attributesRequest"></input>
            <output message="tns:attributesResponse"></output>
            <fault message="tns:TokenExpired" name="TokenExpired"></fault>
            <fault message="tns:GeneralFailure" name="GeneralFailure"></fault>
            <fault message="tns:AccessDenied" name="AccessDenied"></fault>
        </operation>
        <operation name="getCookieNameForToken">
            <input message="tns:getCookieNameForToken"></input>
            <output message="tns:getCookieNameForTokenResponse"></output>
            <fault message="tns:GeneralFailure" name="GeneralFailure"></fault>
        </operation>
        <operation name="getCookieNamesToForward">
            <input message="tns:getCookieNamesToForward"></input>
            <output message="tns:getCookieNamesToForwardResponse"></output>
            <fault message="tns:GeneralFailure" name="GeneralFailure"></fault>
        </operation>
        <operation name="read">
            <input message="tns:read"></input>
            <output message="tns:readResponse"></output>
            <fault message="tns:TokenExpired" name="TokenExpired"></fault>
            <fault message="tns:NeedMoreCredentials" name="NeedMoreCredentials"></fault>
            <fault message="tns:ObjectNotFound" name="ObjectNotFound"></fault>
            <fault message="tns:GeneralFailure" name="GeneralFailure"></fault>
            <fault message="tns:AccessDenied" name="AccessDenied"></fault>
            <fault message="tns:IdServicesException" name="IdServicesException"></fault>
        </operation>
    </portType>
    <binding name="IdentityServicesImplPortBinding" type="tns:IdentityServicesImpl">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap:binding>
        <operation name="log">
            <soap:operation soapAction=""></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="AccessDenied">
                <soap:fault name="AccessDenied" use="literal"></soap:fault>
            </fault>
            <fault name="TokenExpired">
                <soap:fault name="TokenExpired" use="literal"></soap:fault>
            </fault>
            <fault name="GeneralFailure">
                <soap:fault name="GeneralFailure" use="literal"></soap:fault>
            </fault>
        </operation>
        <operation name="attributes">
            <soap:operation soapAction=""></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="TokenExpired">
                <soap:fault name="TokenExpired" use="literal"></soap:fault>
            </fault>
            <fault name="GeneralFailure">
                <soap:fault name="GeneralFailure" use="literal"></soap:fault>
            </fault>
            <fault name="AccessDenied">
                <soap:fault name="AccessDenied" use="literal"></soap:fault>
            </fault>
        </operation>
        <operation name="getCookieNameForToken">
            <soap:operation soapAction=""></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="GeneralFailure">
                <soap:fault name="GeneralFailure" use="literal"></soap:fault>
            </fault>
        </operation>
        <operation name="getCookieNamesToForward">
            <soap:operation soapAction=""></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="GeneralFailure">
                <soap:fault name="GeneralFailure" use="literal"></soap:fault>
            </fault>
        </operation>
        <operation name="read">
            <soap:operation soapAction=""></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="TokenExpired">
                <soap:fault name="TokenExpired" use="literal"></soap:fault>
            </fault>
            <fault name="NeedMoreCredentials">
                <soap:fault name="NeedMoreCredentials" use="literal"></soap:fault>
            </fault>
            <fault name="ObjectNotFound">
                <soap:fault name="ObjectNotFound" use="literal"></soap:fault>
            </fault>
            <fault name="GeneralFailure">
                <soap:fault name="GeneralFailure" use="literal"></soap:fault>
            </fault>
            <fault name="AccessDenied">
                <soap:fault name="AccessDenied" use="literal"></soap:fault>
            </fault>
            <fault name="IdServicesException">
                <soap:fault name="IdServicesException" use="literal"></soap:fault>
            </fault>
        </operation>
    </binding>
    <service name="IdentityServicesImplService">
        <port name="IdentityServicesImplPort" binding="tns:IdentityServicesImplPortBinding">
            <soap:address location="REPLACE_WITH_ACTUAL_URL"></soap:address>
        </port>
    </service>
</definitions>